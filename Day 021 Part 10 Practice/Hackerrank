1. Query the two cities in STATION with the shortest and longest CITY names,
as well as their respective lengths (i.e.: number of characters in the name). 
If there is more than one smallest or largest city, choose the one that comes 
first when ordered alphabetically.

select city, length(city) from station
order by length(city),city asc
limit 1;
select city, length(city) from station
order by length(city) desc
limit 1;



2. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) 
as both their first and last characters. Your result cannot contain duplicates.

SELECT DISTINCT City
FROM Station
WHERE left(City,1) IN ('a','e','i','o','u')
AND right(City,1) IN ('a','e','i','o','u')

3. Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

SELECT NAME
FROM STUDENTS
WHERE MARKS > 75
ORDER BY Substr(Name,-3,3), ID asc

4. The total score of a hacker is the sum of their maximum scores for all of the challenges. 
Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. 
If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. 
Exclude all hackers with a total score of  from your result.




5. Problem:
Placements challenge
https://www.hackerrank.com/challenges/placements/problem?h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
Select S.Name
From ( Students S join Friends F on S.id = F.id
       join Packages P1 on S.ID=P1.ID
       join Packages P2 on F.Friend_ID=P2.ID)
Where P2.Salary > P1.Salary
Order By P2.Salary;

SELECT h.hacker_id, h.name, sum(maximum) as total_score
FROM hackers as h
LEFT JOIN
(SELECT hacker_id,max(score) as maximum 
 FROM submissions
 GROUP BY challenge_id,hacker_id) max_score
 ON
 h.hacker_id = max_score.hacker_id
 GROUP BY hacker_id,name
 having total_score > 0
 order by total_score desc, h.hacker_id;
